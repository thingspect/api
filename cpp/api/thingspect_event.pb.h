// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/thingspect_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fevent_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/api/annotations.pb.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fthingspect_5fevent_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fthingspect_5fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_api_2fthingspect_5fevent_2eproto;
namespace thingspect {
namespace api {
class Event;
struct EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class LatestEventsRequest;
struct LatestEventsRequestDefaultTypeInternal;
extern LatestEventsRequestDefaultTypeInternal _LatestEventsRequest_default_instance_;
class LatestEventsResponse;
struct LatestEventsResponseDefaultTypeInternal;
extern LatestEventsResponseDefaultTypeInternal _LatestEventsResponse_default_instance_;
class ListEventsRequest;
struct ListEventsRequestDefaultTypeInternal;
extern ListEventsRequestDefaultTypeInternal _ListEventsRequest_default_instance_;
class ListEventsResponse;
struct ListEventsResponseDefaultTypeInternal;
extern ListEventsResponseDefaultTypeInternal _ListEventsResponse_default_instance_;
}  // namespace api
}  // namespace thingspect
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace thingspect {
namespace api {

// ===================================================================


// -------------------------------------------------------------------

class Event final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.Event) */ {
 public:
  inline Event() : Event(nullptr) {}
  ~Event() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Event(::google::protobuf::internal::ConstantInitialized);

  Event(const Event& from);
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Event& operator=(Event&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Event& default_instance() {
    return *internal_default_instance();
  }
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Event* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Event* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Event* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Event& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Event& from) {
    Event::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.Event";
  }
  protected:
  explicit Event(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
    kUniqIdFieldNumber = 2,
    kRuleIdFieldNumber = 3,
    kTraceIdFieldNumber = 5,
    kCreatedAtFieldNumber = 4,
  };
  // string org_id = 1 [json_name = "orgID"];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* ptr);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // string uniq_id = 2 [json_name = "uniqID"];
  void clear_uniq_id() ;
  const std::string& uniq_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uniq_id(Arg_&& arg, Args_... args);
  std::string* mutable_uniq_id();
  PROTOBUF_NODISCARD std::string* release_uniq_id();
  void set_allocated_uniq_id(std::string* ptr);

  private:
  const std::string& _internal_uniq_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uniq_id(
      const std::string& value);
  std::string* _internal_mutable_uniq_id();

  public:
  // string rule_id = 3 [json_name = "ruleID"];
  void clear_rule_id() ;
  const std::string& rule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_id(Arg_&& arg, Args_... args);
  std::string* mutable_rule_id();
  PROTOBUF_NODISCARD std::string* release_rule_id();
  void set_allocated_rule_id(std::string* ptr);

  private:
  const std::string& _internal_rule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_id(
      const std::string& value);
  std::string* _internal_mutable_rule_id();

  public:
  // string trace_id = 5;
  void clear_trace_id() ;
  const std::string& trace_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trace_id(Arg_&& arg, Args_... args);
  std::string* mutable_trace_id();
  PROTOBUF_NODISCARD std::string* release_trace_id();
  void set_allocated_trace_id(std::string* ptr);

  private:
  const std::string& _internal_trace_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trace_id(
      const std::string& value);
  std::string* _internal_mutable_trace_id();

  public:
  // .google.protobuf.Timestamp created_at = 4;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.Event)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    ::google::protobuf::internal::ArenaStringPtr uniq_id_;
    ::google::protobuf::internal::ArenaStringPtr rule_id_;
    ::google::protobuf::internal::ArenaStringPtr trace_id_;
    ::google::protobuf::Timestamp* created_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fevent_2eproto;
};// -------------------------------------------------------------------

class ListEventsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.ListEventsRequest) */ {
 public:
  inline ListEventsRequest() : ListEventsRequest(nullptr) {}
  ~ListEventsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListEventsRequest(::google::protobuf::internal::ConstantInitialized);

  ListEventsRequest(const ListEventsRequest& from);
  ListEventsRequest(ListEventsRequest&& from) noexcept
    : ListEventsRequest() {
    *this = ::std::move(from);
  }

  inline ListEventsRequest& operator=(const ListEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListEventsRequest& operator=(ListEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  enum IdOneofCase {
    kUniqId = 1,
    kDeviceId = 2,
    ID_ONEOF_NOT_SET = 0,
  };

  static inline const ListEventsRequest* internal_default_instance() {
    return reinterpret_cast<const ListEventsRequest*>(
               &_ListEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ListEventsRequest& a, ListEventsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListEventsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListEventsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListEventsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListEventsRequest& from) {
    ListEventsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListEventsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.ListEventsRequest";
  }
  protected:
  explicit ListEventsRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleIdFieldNumber = 3,
    kEndTimeFieldNumber = 4,
    kStartTimeFieldNumber = 5,
    kUniqIdFieldNumber = 1,
    kDeviceIdFieldNumber = 2,
  };
  // string rule_id = 3 [json_name = "ruleID", (.validate.rules) = {
  void clear_rule_id() ;
  const std::string& rule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_id(Arg_&& arg, Args_... args);
  std::string* mutable_rule_id();
  PROTOBUF_NODISCARD std::string* release_rule_id();
  void set_allocated_rule_id(std::string* ptr);

  private:
  const std::string& _internal_rule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_id(
      const std::string& value);
  std::string* _internal_mutable_rule_id();

  public:
  // .google.protobuf.Timestamp end_time = 4;
  bool has_end_time() const;
  void clear_end_time() ;
  const ::google::protobuf::Timestamp& end_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_time();

  public:
  // .google.protobuf.Timestamp start_time = 5;
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // string uniq_id = 1 [json_name = "uniqID"];
  bool has_uniq_id() const;
  void clear_uniq_id() ;
  const std::string& uniq_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uniq_id(Arg_&& arg, Args_... args);
  std::string* mutable_uniq_id();
  PROTOBUF_NODISCARD std::string* release_uniq_id();
  void set_allocated_uniq_id(std::string* ptr);

  private:
  const std::string& _internal_uniq_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uniq_id(
      const std::string& value);
  std::string* _internal_mutable_uniq_id();

  public:
  // string device_id = 2 [json_name = "deviceID", (.validate.rules) = {
  bool has_device_id() const;
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* ptr);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  void clear_id_oneof();
  IdOneofCase id_oneof_case() const;
  // @@protoc_insertion_point(class_scope:thingspect.api.ListEventsRequest)
 private:
  class _Internal;
  void set_has_uniq_id();
  void set_has_device_id();

  inline bool has_id_oneof() const;
  inline void clear_has_id_oneof();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5, 2, 64, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr rule_id_;
    ::google::protobuf::Timestamp* end_time_;
    ::google::protobuf::Timestamp* start_time_;
    union IdOneofUnion {
      constexpr IdOneofUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr uniq_id_;
      ::google::protobuf::internal::ArenaStringPtr device_id_;
    } id_oneof_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fevent_2eproto;
};// -------------------------------------------------------------------

class ListEventsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.ListEventsResponse) */ {
 public:
  inline ListEventsResponse() : ListEventsResponse(nullptr) {}
  ~ListEventsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListEventsResponse(::google::protobuf::internal::ConstantInitialized);

  ListEventsResponse(const ListEventsResponse& from);
  ListEventsResponse(ListEventsResponse&& from) noexcept
    : ListEventsResponse() {
    *this = ::std::move(from);
  }

  inline ListEventsResponse& operator=(const ListEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListEventsResponse& operator=(ListEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListEventsResponse* internal_default_instance() {
    return reinterpret_cast<const ListEventsResponse*>(
               &_ListEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListEventsResponse& a, ListEventsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListEventsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListEventsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListEventsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListEventsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListEventsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListEventsResponse& from) {
    ListEventsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListEventsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.ListEventsResponse";
  }
  protected:
  explicit ListEventsResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .thingspect.api.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::thingspect::api::Event* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >*
      mutable_events();
  private:
  const ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>* _internal_mutable_events();
  public:
  const ::thingspect::api::Event& events(int index) const;
  ::thingspect::api::Event* add_events();
  const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >&
      events() const;
  // @@protoc_insertion_point(class_scope:thingspect.api.ListEventsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event > events_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fevent_2eproto;
};// -------------------------------------------------------------------

class LatestEventsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.LatestEventsRequest) */ {
 public:
  inline LatestEventsRequest() : LatestEventsRequest(nullptr) {}
  ~LatestEventsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LatestEventsRequest(::google::protobuf::internal::ConstantInitialized);

  LatestEventsRequest(const LatestEventsRequest& from);
  LatestEventsRequest(LatestEventsRequest&& from) noexcept
    : LatestEventsRequest() {
    *this = ::std::move(from);
  }

  inline LatestEventsRequest& operator=(const LatestEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatestEventsRequest& operator=(LatestEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LatestEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LatestEventsRequest* internal_default_instance() {
    return reinterpret_cast<const LatestEventsRequest*>(
               &_LatestEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LatestEventsRequest& a, LatestEventsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LatestEventsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LatestEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LatestEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LatestEventsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LatestEventsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LatestEventsRequest& from) {
    LatestEventsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatestEventsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.LatestEventsRequest";
  }
  protected:
  explicit LatestEventsRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleIdFieldNumber = 1,
  };
  // string rule_id = 1 [json_name = "ruleID", (.validate.rules) = {
  void clear_rule_id() ;
  const std::string& rule_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rule_id(Arg_&& arg, Args_... args);
  std::string* mutable_rule_id();
  PROTOBUF_NODISCARD std::string* release_rule_id();
  void set_allocated_rule_id(std::string* ptr);

  private:
  const std::string& _internal_rule_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rule_id(
      const std::string& value);
  std::string* _internal_mutable_rule_id();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.LatestEventsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 50, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr rule_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fevent_2eproto;
};// -------------------------------------------------------------------

class LatestEventsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.LatestEventsResponse) */ {
 public:
  inline LatestEventsResponse() : LatestEventsResponse(nullptr) {}
  ~LatestEventsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LatestEventsResponse(::google::protobuf::internal::ConstantInitialized);

  LatestEventsResponse(const LatestEventsResponse& from);
  LatestEventsResponse(LatestEventsResponse&& from) noexcept
    : LatestEventsResponse() {
    *this = ::std::move(from);
  }

  inline LatestEventsResponse& operator=(const LatestEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatestEventsResponse& operator=(LatestEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LatestEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LatestEventsResponse* internal_default_instance() {
    return reinterpret_cast<const LatestEventsResponse*>(
               &_LatestEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LatestEventsResponse& a, LatestEventsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LatestEventsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LatestEventsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LatestEventsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LatestEventsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LatestEventsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LatestEventsResponse& from) {
    LatestEventsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatestEventsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.LatestEventsResponse";
  }
  protected:
  explicit LatestEventsResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .thingspect.api.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::thingspect::api::Event* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >*
      mutable_events();
  private:
  const ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>* _internal_mutable_events();
  public:
  const ::thingspect::api::Event& events(int index) const;
  ::thingspect::api::Event* add_events();
  const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >&
      events() const;
  // @@protoc_insertion_point(class_scope:thingspect.api.LatestEventsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event > events_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Event

// string org_id = 1 [json_name = "orgID"];
inline void Event::clear_org_id() {
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& Event::org_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Event.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Event.org_id)
}
inline std::string* Event::mutable_org_id() {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Event.org_id)
  return _s;
}
inline const std::string& Event::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void Event::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Event::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Event::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Event.org_id)
  return _impl_.org_id_.Release();
}
inline void Event::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Event.org_id)
}

// string uniq_id = 2 [json_name = "uniqID"];
inline void Event::clear_uniq_id() {
  _impl_.uniq_id_.ClearToEmpty();
}
inline const std::string& Event::uniq_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Event.uniq_id)
  return _internal_uniq_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_uniq_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uniq_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Event.uniq_id)
}
inline std::string* Event::mutable_uniq_id() {
  std::string* _s = _internal_mutable_uniq_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Event.uniq_id)
  return _s;
}
inline const std::string& Event::_internal_uniq_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uniq_id_.Get();
}
inline void Event::_internal_set_uniq_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uniq_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Event::_internal_mutable_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uniq_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Event::release_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Event.uniq_id)
  return _impl_.uniq_id_.Release();
}
inline void Event::set_allocated_uniq_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uniq_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uniq_id_.IsDefault()) {
          _impl_.uniq_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Event.uniq_id)
}

// string rule_id = 3 [json_name = "ruleID"];
inline void Event::clear_rule_id() {
  _impl_.rule_id_.ClearToEmpty();
}
inline const std::string& Event::rule_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Event.rule_id)
  return _internal_rule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_rule_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Event.rule_id)
}
inline std::string* Event::mutable_rule_id() {
  std::string* _s = _internal_mutable_rule_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Event.rule_id)
  return _s;
}
inline const std::string& Event::_internal_rule_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rule_id_.Get();
}
inline void Event::_internal_set_rule_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Event::_internal_mutable_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rule_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Event::release_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Event.rule_id)
  return _impl_.rule_id_.Release();
}
inline void Event::set_allocated_rule_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rule_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rule_id_.IsDefault()) {
          _impl_.rule_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Event.rule_id)
}

// .google.protobuf.Timestamp created_at = 4;
inline bool Event::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Event::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Event::created_at() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Event.created_at)
  return _internal_created_at();
}
inline void Event::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.Event.created_at)
}
inline ::google::protobuf::Timestamp* Event::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Event::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Event.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* Event::mutable_created_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Event.created_at)
  return _msg;
}
inline void Event::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Event.created_at)
}

// string trace_id = 5;
inline void Event::clear_trace_id() {
  _impl_.trace_id_.ClearToEmpty();
}
inline const std::string& Event::trace_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Event.trace_id)
  return _internal_trace_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Event::set_trace_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trace_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Event.trace_id)
}
inline std::string* Event::mutable_trace_id() {
  std::string* _s = _internal_mutable_trace_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Event.trace_id)
  return _s;
}
inline const std::string& Event::_internal_trace_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trace_id_.Get();
}
inline void Event::_internal_set_trace_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.trace_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Event::_internal_mutable_trace_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.trace_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Event::release_trace_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Event.trace_id)
  return _impl_.trace_id_.Release();
}
inline void Event::set_allocated_trace_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trace_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.trace_id_.IsDefault()) {
          _impl_.trace_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Event.trace_id)
}

// -------------------------------------------------------------------

// ListEventsRequest

// string uniq_id = 1 [json_name = "uniqID"];
inline bool ListEventsRequest::has_uniq_id() const {
  return id_oneof_case() == kUniqId;
}
inline void ListEventsRequest::set_has_uniq_id() {
  _impl_._oneof_case_[0] = kUniqId;
}
inline void ListEventsRequest::clear_uniq_id() {
  if (id_oneof_case() == kUniqId) {
    _impl_.id_oneof_.uniq_id_.Destroy();
    clear_has_id_oneof();
  }
}
inline const std::string& ListEventsRequest::uniq_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsRequest.uniq_id)
  return _internal_uniq_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListEventsRequest::set_uniq_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kUniqId) {
    clear_id_oneof();

    set_has_uniq_id();
    _impl_.id_oneof_.uniq_id_.InitDefault();
  }
  _impl_.id_oneof_.uniq_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListEventsRequest.uniq_id)
}
inline std::string* ListEventsRequest::mutable_uniq_id() {
  std::string* _s = _internal_mutable_uniq_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsRequest.uniq_id)
  return _s;
}
inline const std::string& ListEventsRequest::_internal_uniq_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kUniqId) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.id_oneof_.uniq_id_.Get();
}
inline void ListEventsRequest::_internal_set_uniq_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kUniqId) {
    clear_id_oneof();

    set_has_uniq_id();
    _impl_.id_oneof_.uniq_id_.InitDefault();
  }
  _impl_.id_oneof_.uniq_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ListEventsRequest::_internal_mutable_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kUniqId) {
    clear_id_oneof();

    set_has_uniq_id();
    _impl_.id_oneof_.uniq_id_.InitDefault();
  }
  return _impl_.id_oneof_.uniq_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ListEventsRequest::release_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListEventsRequest.uniq_id)
  if (id_oneof_case() != kUniqId) {
    return nullptr;
  }
  clear_has_id_oneof();
  return _impl_.id_oneof_.uniq_id_.Release();
}
inline void ListEventsRequest::set_allocated_uniq_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_id_oneof()) {
    clear_id_oneof();
  }
  if (value != nullptr) {
    set_has_uniq_id();
    _impl_.id_oneof_.uniq_id_.InitAllocated(value, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListEventsRequest.uniq_id)
}

// string device_id = 2 [json_name = "deviceID", (.validate.rules) = {
inline bool ListEventsRequest::has_device_id() const {
  return id_oneof_case() == kDeviceId;
}
inline void ListEventsRequest::set_has_device_id() {
  _impl_._oneof_case_[0] = kDeviceId;
}
inline void ListEventsRequest::clear_device_id() {
  if (id_oneof_case() == kDeviceId) {
    _impl_.id_oneof_.device_id_.Destroy();
    clear_has_id_oneof();
  }
}
inline const std::string& ListEventsRequest::device_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsRequest.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListEventsRequest::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kDeviceId) {
    clear_id_oneof();

    set_has_device_id();
    _impl_.id_oneof_.device_id_.InitDefault();
  }
  _impl_.id_oneof_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListEventsRequest.device_id)
}
inline std::string* ListEventsRequest::mutable_device_id() {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsRequest.device_id)
  return _s;
}
inline const std::string& ListEventsRequest::_internal_device_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kDeviceId) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.id_oneof_.device_id_.Get();
}
inline void ListEventsRequest::_internal_set_device_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kDeviceId) {
    clear_id_oneof();

    set_has_device_id();
    _impl_.id_oneof_.device_id_.InitDefault();
  }
  _impl_.id_oneof_.device_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ListEventsRequest::_internal_mutable_device_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_oneof_case() != kDeviceId) {
    clear_id_oneof();

    set_has_device_id();
    _impl_.id_oneof_.device_id_.InitDefault();
  }
  return _impl_.id_oneof_.device_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ListEventsRequest::release_device_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListEventsRequest.device_id)
  if (id_oneof_case() != kDeviceId) {
    return nullptr;
  }
  clear_has_id_oneof();
  return _impl_.id_oneof_.device_id_.Release();
}
inline void ListEventsRequest::set_allocated_device_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_id_oneof()) {
    clear_id_oneof();
  }
  if (value != nullptr) {
    set_has_device_id();
    _impl_.id_oneof_.device_id_.InitAllocated(value, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListEventsRequest.device_id)
}

// string rule_id = 3 [json_name = "ruleID", (.validate.rules) = {
inline void ListEventsRequest::clear_rule_id() {
  _impl_.rule_id_.ClearToEmpty();
}
inline const std::string& ListEventsRequest::rule_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsRequest.rule_id)
  return _internal_rule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListEventsRequest::set_rule_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListEventsRequest.rule_id)
}
inline std::string* ListEventsRequest::mutable_rule_id() {
  std::string* _s = _internal_mutable_rule_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsRequest.rule_id)
  return _s;
}
inline const std::string& ListEventsRequest::_internal_rule_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rule_id_.Get();
}
inline void ListEventsRequest::_internal_set_rule_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ListEventsRequest::_internal_mutable_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rule_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ListEventsRequest::release_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListEventsRequest.rule_id)
  return _impl_.rule_id_.Release();
}
inline void ListEventsRequest::set_allocated_rule_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rule_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rule_id_.IsDefault()) {
          _impl_.rule_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListEventsRequest.rule_id)
}

// .google.protobuf.Timestamp end_time = 4;
inline bool ListEventsRequest::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ListEventsRequest::_internal_end_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ListEventsRequest::end_time() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsRequest.end_time)
  return _internal_end_time();
}
inline void ListEventsRequest::unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }
  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.ListEventsRequest.end_time)
}
inline ::google::protobuf::Timestamp* ListEventsRequest::release_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::unsafe_arena_release_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListEventsRequest.end_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::_internal_mutable_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_time_;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::mutable_end_time() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsRequest.end_time)
  return _msg;
}
inline void ListEventsRequest::set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListEventsRequest.end_time)
}

// .google.protobuf.Timestamp start_time = 5;
inline bool ListEventsRequest::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ListEventsRequest::_internal_start_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ListEventsRequest::start_time() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsRequest.start_time)
  return _internal_start_time();
}
inline void ListEventsRequest::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.ListEventsRequest.start_time)
}
inline ::google::protobuf::Timestamp* ListEventsRequest::release_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::unsafe_arena_release_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListEventsRequest.start_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::_internal_mutable_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* ListEventsRequest::mutable_start_time() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsRequest.start_time)
  return _msg;
}
inline void ListEventsRequest::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListEventsRequest.start_time)
}

inline bool ListEventsRequest::has_id_oneof() const {
  return id_oneof_case() != ID_ONEOF_NOT_SET;
}
inline void ListEventsRequest::clear_has_id_oneof() {
  _impl_._oneof_case_[0] = ID_ONEOF_NOT_SET;
}
inline ListEventsRequest::IdOneofCase ListEventsRequest::id_oneof_case() const {
  return ListEventsRequest::IdOneofCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ListEventsResponse

// repeated .thingspect.api.Event events = 1;
inline int ListEventsResponse::_internal_events_size() const {
  return _internal_events().size();
}
inline int ListEventsResponse::events_size() const {
  return _internal_events_size();
}
inline void ListEventsResponse::clear_events() {
  _internal_mutable_events()->Clear();
}
inline ::thingspect::api::Event* ListEventsResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListEventsResponse.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >*
ListEventsResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:thingspect.api.ListEventsResponse.events)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_events();
}
inline const ::thingspect::api::Event& ListEventsResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListEventsResponse.events)
    return _internal_events().Get(index);
}
inline ::thingspect::api::Event* ListEventsResponse::add_events() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::thingspect::api::Event* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:thingspect.api.ListEventsResponse.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >&
ListEventsResponse::events() const {
  // @@protoc_insertion_point(field_list:thingspect.api.ListEventsResponse.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>&
ListEventsResponse::_internal_events() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>*
ListEventsResponse::_internal_mutable_events() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// LatestEventsRequest

// string rule_id = 1 [json_name = "ruleID", (.validate.rules) = {
inline void LatestEventsRequest::clear_rule_id() {
  _impl_.rule_id_.ClearToEmpty();
}
inline const std::string& LatestEventsRequest::rule_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.LatestEventsRequest.rule_id)
  return _internal_rule_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LatestEventsRequest::set_rule_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.LatestEventsRequest.rule_id)
}
inline std::string* LatestEventsRequest::mutable_rule_id() {
  std::string* _s = _internal_mutable_rule_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.LatestEventsRequest.rule_id)
  return _s;
}
inline const std::string& LatestEventsRequest::_internal_rule_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rule_id_.Get();
}
inline void LatestEventsRequest::_internal_set_rule_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rule_id_.Set(value, GetArenaForAllocation());
}
inline std::string* LatestEventsRequest::_internal_mutable_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.rule_id_.Mutable( GetArenaForAllocation());
}
inline std::string* LatestEventsRequest::release_rule_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.LatestEventsRequest.rule_id)
  return _impl_.rule_id_.Release();
}
inline void LatestEventsRequest::set_allocated_rule_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rule_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.rule_id_.IsDefault()) {
          _impl_.rule_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.LatestEventsRequest.rule_id)
}

// -------------------------------------------------------------------

// LatestEventsResponse

// repeated .thingspect.api.Event events = 1;
inline int LatestEventsResponse::_internal_events_size() const {
  return _internal_events().size();
}
inline int LatestEventsResponse::events_size() const {
  return _internal_events_size();
}
inline void LatestEventsResponse::clear_events() {
  _internal_mutable_events()->Clear();
}
inline ::thingspect::api::Event* LatestEventsResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:thingspect.api.LatestEventsResponse.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >*
LatestEventsResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:thingspect.api.LatestEventsResponse.events)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_events();
}
inline const ::thingspect::api::Event& LatestEventsResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:thingspect.api.LatestEventsResponse.events)
    return _internal_events().Get(index);
}
inline ::thingspect::api::Event* LatestEventsResponse::add_events() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::thingspect::api::Event* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:thingspect.api.LatestEventsResponse.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Event >&
LatestEventsResponse::events() const {
  // @@protoc_insertion_point(field_list:thingspect.api.LatestEventsResponse.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>&
LatestEventsResponse::_internal_events() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::thingspect::api::Event>*
LatestEventsResponse::_internal_mutable_events() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.events_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace thingspect


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fevent_2eproto_2epb_2eh
