<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/thingspect_datapoint.proto

namespace Thingspect\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DataPoint represents a data point as stored in the database.
 *
 * Generated from protobuf message <code>thingspect.common.DataPoint</code>
 */
class DataPoint extends \Google\Protobuf\Internal\Message
{
    /**
     * Device unique ID. Ignored during MQTT ingest if provided as part of the topic. Required for API publish.
     *
     * Generated from protobuf field <code>string uniq_id = 1 [json_name = "uniqID", (.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     */
    protected $uniq_id = '';
    /**
     * Device attribute.
     *
     * Generated from protobuf field <code>string attr = 2 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     */
    protected $attr = '';
    /**
     * Timestamp. If not present during MQTT ingest or API publish, the current time will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ts = 7;</code>
     */
    protected $ts = null;
    /**
     * Authentication token (UUID). Only used during MQTT ingest. Will be ignored if provided as part of the Payload message.
     *
     * Generated from protobuf field <code>string token = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $token = '';
    /**
     * Trace ID (UUID). Assigned by the platform, will be ignored if provided during MQTT ingest or API publish.
     *
     * Generated from protobuf field <code>string trace_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $trace_id = '';
    protected $val_oneof;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $uniq_id
     *           Device unique ID. Ignored during MQTT ingest if provided as part of the topic. Required for API publish.
     *     @type string $attr
     *           Device attribute.
     *     @type int $int_val
     *           Integer value, 32-bit.
     *     @type float $fl64_val
     *           Float value, 64-bit.
     *     @type string $str_val
     *           String value.
     *     @type bool $bool_val
     *           Boolean value.
     *     @type string $bytes_val
     *           Bytes value. When used in JSON, the value will be represented as a base64 string.
     *     @type \Google\Protobuf\Timestamp $ts
     *           Timestamp. If not present during MQTT ingest or API publish, the current time will be used.
     *     @type string $token
     *           Authentication token (UUID). Only used during MQTT ingest. Will be ignored if provided as part of the Payload message.
     *     @type string $trace_id
     *           Trace ID (UUID). Assigned by the platform, will be ignored if provided during MQTT ingest or API publish.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\ThingspectDatapoint::initOnce();
        parent::__construct($data);
    }

    /**
     * Device unique ID. Ignored during MQTT ingest if provided as part of the topic. Required for API publish.
     *
     * Generated from protobuf field <code>string uniq_id = 1 [json_name = "uniqID", (.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     * @return string
     */
    public function getUniqId()
    {
        return $this->uniq_id;
    }

    /**
     * Device unique ID. Ignored during MQTT ingest if provided as part of the topic. Required for API publish.
     *
     * Generated from protobuf field <code>string uniq_id = 1 [json_name = "uniqID", (.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setUniqId($var)
    {
        GPBUtil::checkString($var, True);
        $this->uniq_id = $var;

        return $this;
    }

    /**
     * Device attribute.
     *
     * Generated from protobuf field <code>string attr = 2 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     * @return string
     */
    public function getAttr()
    {
        return $this->attr;
    }

    /**
     * Device attribute.
     *
     * Generated from protobuf field <code>string attr = 2 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setAttr($var)
    {
        GPBUtil::checkString($var, True);
        $this->attr = $var;

        return $this;
    }

    /**
     * Integer value, 32-bit.
     *
     * Generated from protobuf field <code>sint32 int_val = 3;</code>
     * @return int
     */
    public function getIntVal()
    {
        return $this->readOneof(3);
    }

    public function hasIntVal()
    {
        return $this->hasOneof(3);
    }

    /**
     * Integer value, 32-bit.
     *
     * Generated from protobuf field <code>sint32 int_val = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setIntVal($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Float value, 64-bit.
     *
     * Generated from protobuf field <code>double fl64_val = 4;</code>
     * @return float
     */
    public function getFl64Val()
    {
        return $this->readOneof(4);
    }

    public function hasFl64Val()
    {
        return $this->hasOneof(4);
    }

    /**
     * Float value, 64-bit.
     *
     * Generated from protobuf field <code>double fl64_val = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setFl64Val($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * String value.
     *
     * Generated from protobuf field <code>string str_val = 5;</code>
     * @return string
     */
    public function getStrVal()
    {
        return $this->readOneof(5);
    }

    public function hasStrVal()
    {
        return $this->hasOneof(5);
    }

    /**
     * String value.
     *
     * Generated from protobuf field <code>string str_val = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setStrVal($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Boolean value.
     *
     * Generated from protobuf field <code>bool bool_val = 6;</code>
     * @return bool
     */
    public function getBoolVal()
    {
        return $this->readOneof(6);
    }

    public function hasBoolVal()
    {
        return $this->hasOneof(6);
    }

    /**
     * Boolean value.
     *
     * Generated from protobuf field <code>bool bool_val = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setBoolVal($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Bytes value. When used in JSON, the value will be represented as a base64 string.
     *
     * Generated from protobuf field <code>bytes bytes_val = 16;</code>
     * @return string
     */
    public function getBytesVal()
    {
        return $this->readOneof(16);
    }

    public function hasBytesVal()
    {
        return $this->hasOneof(16);
    }

    /**
     * Bytes value. When used in JSON, the value will be represented as a base64 string.
     *
     * Generated from protobuf field <code>bytes bytes_val = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setBytesVal($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(16, $var);

        return $this;
    }

    /**
     * Timestamp. If not present during MQTT ingest or API publish, the current time will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ts = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTs()
    {
        return $this->ts;
    }

    public function hasTs()
    {
        return isset($this->ts);
    }

    public function clearTs()
    {
        unset($this->ts);
    }

    /**
     * Timestamp. If not present during MQTT ingest or API publish, the current time will be used.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ts = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTs($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->ts = $var;

        return $this;
    }

    /**
     * Authentication token (UUID). Only used during MQTT ingest. Will be ignored if provided as part of the Payload message.
     *
     * Generated from protobuf field <code>string token = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Authentication token (UUID). Only used during MQTT ingest. Will be ignored if provided as part of the Payload message.
     *
     * Generated from protobuf field <code>string token = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->token = $var;

        return $this;
    }

    /**
     * Trace ID (UUID). Assigned by the platform, will be ignored if provided during MQTT ingest or API publish.
     *
     * Generated from protobuf field <code>string trace_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getTraceId()
    {
        return $this->trace_id;
    }

    /**
     * Trace ID (UUID). Assigned by the platform, will be ignored if provided during MQTT ingest or API publish.
     *
     * Generated from protobuf field <code>string trace_id = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setTraceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->trace_id = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getValOneof()
    {
        return $this->whichOneof("val_oneof");
    }

}

