syntax = "proto3";
package thingspect.api;

import "common/datapoint.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/thingspect/api/go/api";

// DataPointService contains functions to create and query data points.
service DataPointService {
  // Publish data points.
  rpc PublishDataPoints(PublishDataPointsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/datapoints"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "202"
        value: {
          description: "A successful response."
          schema: {}
        }
      }
    };
  }

  // List all data points for a device in a [end, start) time range, in descending timestamp order.
  rpc ListDataPoints(ListDataPointsRequest) returns (ListDataPointsResponse) {
    option (google.api.http) = {
      get: "/v1/datapoints"
    };
  }

  // List the latest data point for each of a device's attributes.
  rpc LatestDataPoints(LatestDataPointsRequest) returns (LatestDataPointsResponse) {
    option (google.api.http) = {
      get: "/v1/datapoints/latest"
    };
  }
}

// PublishDataPointsRequest is sent to publish data points.
message PublishDataPointsRequest {
  // Data point array to publish.
  repeated common.DataPoint points = 1 [(validate.rules).repeated.min_items = 1, (google.api.field_behavior) = REQUIRED];
}

// ListDataPointsRequest is sent to list device data points in a [end, start) time range, in descending timestamp order.
message ListDataPointsRequest {
  // Identifier.
  oneof id_oneof {
    option (validate.required) = true;

    // Device unique ID. Either unique ID or device ID must be provided.
    string uniq_id = 1 [json_name = "uniqID"];

    // Device ID (UUID). Either unique ID or device ID must be provided.
    string dev_id = 2 [json_name = "devID"];
  }

  // Device attribute. If not specified, all attributes are included.
  string attr = 3 [(validate.rules).string = {min_len: 0, max_len: 40}];

  // Data points range end time. Defaults to current time if not specified. Maximum supported time range is 90 days.
  google.protobuf.Timestamp end_time = 4;

  // Data points range start time. Defaults to end_time - 24 hours if not specified or after end_time. Maximum supported time range is 90 days.
  google.protobuf.Timestamp start_time = 5;
}

// ListDataPointsResponse is sent in response to a device data points list.
message ListDataPointsResponse {
  // Data point array, ordered by descending created_at timestamp.
  repeated common.DataPoint points = 1;
}

// LatestDataPointsRequest is sent to list latest device data points.
message LatestDataPointsRequest {
  // Identifier.
  oneof id_oneof {
    option (validate.required) = true;

    // Device unique ID. Either unique ID or device ID must be provided.
    string uniq_id = 1 [json_name = "uniqID"];

    // Device ID (UUID). Either unique ID or device ID must be provided.
    string dev_id = 2 [json_name = "devID"];
  }
}

// LatestDataPointsResponse is sent in response to a device latest list.
message LatestDataPointsResponse {
  // Data point array, ordered by ascending attribute name.
  repeated common.DataPoint points = 1;
}
