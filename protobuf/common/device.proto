syntax = "proto3";
package thingspect.common;

import "common/status.proto";
import "common/decoder.proto";
import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "validate/validate.proto";

option go_package = "github.com/thingspect/api/go/common";

// Device represents a device as stored in the database.
message Device {
  // Device ID (UUID).
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Organization ID (UUID).
  string org_id = 2 [json_name = "orgID", (google.api.field_behavior) = OUTPUT_ONLY];

  // Device unique ID.
  string uniq_id = 3 [json_name = "uniqID", (validate.rules).string = {min_len: 5, max_len: 40}];

  // Device name.
  string name = 4 [(validate.rules).string = {min_len: 5, max_len: 80}];

  // Device status.
  Status status = 5 [(validate.rules).enum = {in: [3,6]}];

  // Authentication token (UUID). Will be generated at creation time, but can be updated afterward.
  string token = 6 [(validate.rules).string = {ignore_empty: true, uuid: true}];

  // Device data payload decoder.
  Decoder decoder = 7;

  // Device tags. Nested tags should be delimited by '/'.
  repeated string tags = 8 [(validate.rules).repeated.unique = true, (validate.rules).repeated.items.string.max_len = 255];

  // Device creation timestamp.
  google.protobuf.Timestamp created_at = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Device modification timestamp.
  google.protobuf.Timestamp updated_at = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
}
