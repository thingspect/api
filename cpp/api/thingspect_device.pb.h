// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/thingspect_device.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fdevice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fdevice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/thingspect_status.pb.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/field_mask.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fthingspect_5fdevice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fthingspect_5fdevice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_api_2fthingspect_5fdevice_2eproto;
namespace thingspect {
namespace api {
class CreateDeviceLoRaWANRequest;
struct CreateDeviceLoRaWANRequestDefaultTypeInternal;
extern CreateDeviceLoRaWANRequestDefaultTypeInternal _CreateDeviceLoRaWANRequest_default_instance_;
class CreateDeviceLoRaWANRequest_DeviceLoRaWANType;
struct CreateDeviceLoRaWANRequest_DeviceLoRaWANTypeDefaultTypeInternal;
extern CreateDeviceLoRaWANRequest_DeviceLoRaWANTypeDefaultTypeInternal _CreateDeviceLoRaWANRequest_DeviceLoRaWANType_default_instance_;
class CreateDeviceLoRaWANRequest_GatewayLoRaWANType;
struct CreateDeviceLoRaWANRequest_GatewayLoRaWANTypeDefaultTypeInternal;
extern CreateDeviceLoRaWANRequest_GatewayLoRaWANTypeDefaultTypeInternal _CreateDeviceLoRaWANRequest_GatewayLoRaWANType_default_instance_;
class CreateDeviceRequest;
struct CreateDeviceRequestDefaultTypeInternal;
extern CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
class DeleteDeviceLoRaWANRequest;
struct DeleteDeviceLoRaWANRequestDefaultTypeInternal;
extern DeleteDeviceLoRaWANRequestDefaultTypeInternal _DeleteDeviceLoRaWANRequest_default_instance_;
class DeleteDeviceRequest;
struct DeleteDeviceRequestDefaultTypeInternal;
extern DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;
class Device;
struct DeviceDefaultTypeInternal;
extern DeviceDefaultTypeInternal _Device_default_instance_;
class GetDeviceRequest;
struct GetDeviceRequestDefaultTypeInternal;
extern GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;
class ListDevicesRequest;
struct ListDevicesRequestDefaultTypeInternal;
extern ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;
class ListDevicesResponse;
struct ListDevicesResponseDefaultTypeInternal;
extern ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;
class UpdateDeviceRequest;
struct UpdateDeviceRequestDefaultTypeInternal;
extern UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;
}  // namespace api
}  // namespace thingspect
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace thingspect {
namespace api {
enum Decoder : int {
  RAW = 0,
  GATEWAY = 1,
  RADIO_BRIDGE_DOOR_V1 = 2,
  RADIO_BRIDGE_DOOR_V2 = 3,
  GLOBALSAT_CO2 = 4,
  GLOBALSAT_CO = 5,
  GLOBALSAT_PM25 = 6,
  TEKTELIC_HOME = 7,
  Decoder_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Decoder_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Decoder_IsValid(int value);
constexpr Decoder Decoder_MIN = static_cast<Decoder>(0);
constexpr Decoder Decoder_MAX = static_cast<Decoder>(7);
constexpr int Decoder_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
Decoder_descriptor();
template <typename T>
const std::string& Decoder_Name(T value) {
  static_assert(std::is_same<T, Decoder>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Decoder_Name().");
  return Decoder_Name(static_cast<Decoder>(value));
}
template <>
inline const std::string& Decoder_Name(Decoder value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Decoder_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool Decoder_Parse(absl::string_view name, Decoder* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Decoder>(
      Decoder_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Device final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.Device) */ {
 public:
  inline Device() : Device(nullptr) {}
  ~Device() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Device(::google::protobuf::internal::ConstantInitialized);

  Device(const Device& from);
  Device(Device&& from) noexcept
    : Device() {
    *this = ::std::move(from);
  }

  inline Device& operator=(const Device& from) {
    CopyFrom(from);
    return *this;
  }
  inline Device& operator=(Device&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Device& default_instance() {
    return *internal_default_instance();
  }
  static inline const Device* internal_default_instance() {
    return reinterpret_cast<const Device*>(
               &_Device_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Device& a, Device& b) {
    a.Swap(&b);
  }
  inline void Swap(Device* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Device* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Device* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Device>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Device& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Device& from) {
    Device::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Device* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.Device";
  }
  protected:
  explicit Device(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 8,
    kIdFieldNumber = 1,
    kOrgIdFieldNumber = 2,
    kUniqIdFieldNumber = 3,
    kNameFieldNumber = 4,
    kTokenFieldNumber = 6,
    kCreatedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kStatusFieldNumber = 5,
    kDecoderFieldNumber = 7,
  };
  // repeated string tags = 8 [(.validate.rules) = {
  int tags_size() const;
  private:
  int _internal_tags_size() const;

  public:
  void clear_tags() ;
  const std::string& tags(int index) const;
  std::string* mutable_tags(int index);
  void set_tags(int index, const std::string& value);
  void set_tags(int index, std::string&& value);
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, std::size_t size);
  void set_tags(int index, absl::string_view value);
  std::string* add_tags();
  void add_tags(const std::string& value);
  void add_tags(std::string&& value);
  void add_tags(const char* value);
  void add_tags(const char* value, std::size_t size);
  void add_tags(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_tags();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_tags();

  public:
  // string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string org_id = 2 [json_name = "orgID", (.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* ptr);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // string uniq_id = 3 [json_name = "uniqID", (.validate.rules) = {
  void clear_uniq_id() ;
  const std::string& uniq_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uniq_id(Arg_&& arg, Args_... args);
  std::string* mutable_uniq_id();
  PROTOBUF_NODISCARD std::string* release_uniq_id();
  void set_allocated_uniq_id(std::string* ptr);

  private:
  const std::string& _internal_uniq_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uniq_id(
      const std::string& value);
  std::string* _internal_mutable_uniq_id();

  public:
  // string name = 4 [(.validate.rules) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string token = 6 [(.validate.rules) = {
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* ptr);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .google.protobuf.Timestamp created_at = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp updated_at = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // .thingspect.api.Status status = 5 [(.validate.rules) = {
  void clear_status() ;
  ::thingspect::api::Status status() const;
  void set_status(::thingspect::api::Status value);

  private:
  ::thingspect::api::Status _internal_status() const;
  void _internal_set_status(::thingspect::api::Status value);

  public:
  // .thingspect.api.Decoder decoder = 7;
  void clear_decoder() ;
  ::thingspect::api::Decoder decoder() const;
  void set_decoder(::thingspect::api::Decoder value);

  private:
  ::thingspect::api::Decoder _internal_decoder() const;
  void _internal_set_decoder(::thingspect::api::Decoder value);

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.Device)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10, 2, 66, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> tags_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    ::google::protobuf::internal::ArenaStringPtr uniq_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* updated_at_;
    int status_;
    int decoder_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class CreateDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.CreateDeviceRequest) */ {
 public:
  inline CreateDeviceRequest() : CreateDeviceRequest(nullptr) {}
  ~CreateDeviceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceRequest(::google::protobuf::internal::ConstantInitialized);

  CreateDeviceRequest(const CreateDeviceRequest& from);
  CreateDeviceRequest(CreateDeviceRequest&& from) noexcept
    : CreateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline CreateDeviceRequest& operator=(const CreateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceRequest& operator=(CreateDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceRequest*>(
               &_CreateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateDeviceRequest& a, CreateDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDeviceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateDeviceRequest& from) {
    CreateDeviceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.CreateDeviceRequest";
  }
  protected:
  explicit CreateDeviceRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
  };
  // .thingspect.api.Device device = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  bool has_device() const;
  void clear_device() ;
  const ::thingspect::api::Device& device() const;
  PROTOBUF_NODISCARD ::thingspect::api::Device* release_device();
  ::thingspect::api::Device* mutable_device();
  void set_allocated_device(::thingspect::api::Device* value);
  void unsafe_arena_set_allocated_device(::thingspect::api::Device* value);
  ::thingspect::api::Device* unsafe_arena_release_device();

  private:
  const ::thingspect::api::Device& _internal_device() const;
  ::thingspect::api::Device* _internal_mutable_device();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.CreateDeviceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::thingspect::api::Device* device_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class CreateDeviceLoRaWANRequest_GatewayLoRaWANType final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:thingspect.api.CreateDeviceLoRaWANRequest.GatewayLoRaWANType) */ {
 public:
  inline CreateDeviceLoRaWANRequest_GatewayLoRaWANType() : CreateDeviceLoRaWANRequest_GatewayLoRaWANType(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceLoRaWANRequest_GatewayLoRaWANType(::google::protobuf::internal::ConstantInitialized);

  CreateDeviceLoRaWANRequest_GatewayLoRaWANType(const CreateDeviceLoRaWANRequest_GatewayLoRaWANType& from);
  CreateDeviceLoRaWANRequest_GatewayLoRaWANType(CreateDeviceLoRaWANRequest_GatewayLoRaWANType&& from) noexcept
    : CreateDeviceLoRaWANRequest_GatewayLoRaWANType() {
    *this = ::std::move(from);
  }

  inline CreateDeviceLoRaWANRequest_GatewayLoRaWANType& operator=(const CreateDeviceLoRaWANRequest_GatewayLoRaWANType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceLoRaWANRequest_GatewayLoRaWANType& operator=(CreateDeviceLoRaWANRequest_GatewayLoRaWANType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceLoRaWANRequest_GatewayLoRaWANType& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDeviceLoRaWANRequest_GatewayLoRaWANType* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceLoRaWANRequest_GatewayLoRaWANType*>(
               &_CreateDeviceLoRaWANRequest_GatewayLoRaWANType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreateDeviceLoRaWANRequest_GatewayLoRaWANType& a, CreateDeviceLoRaWANRequest_GatewayLoRaWANType& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDeviceLoRaWANRequest_GatewayLoRaWANType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceLoRaWANRequest_GatewayLoRaWANType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceLoRaWANRequest_GatewayLoRaWANType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateDeviceLoRaWANRequest_GatewayLoRaWANType>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CreateDeviceLoRaWANRequest_GatewayLoRaWANType& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CreateDeviceLoRaWANRequest_GatewayLoRaWANType& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.CreateDeviceLoRaWANRequest.GatewayLoRaWANType";
  }
  protected:
  explicit CreateDeviceLoRaWANRequest_GatewayLoRaWANType(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:thingspect.api.CreateDeviceLoRaWANRequest.GatewayLoRaWANType)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class CreateDeviceLoRaWANRequest_DeviceLoRaWANType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType) */ {
 public:
  inline CreateDeviceLoRaWANRequest_DeviceLoRaWANType() : CreateDeviceLoRaWANRequest_DeviceLoRaWANType(nullptr) {}
  ~CreateDeviceLoRaWANRequest_DeviceLoRaWANType() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceLoRaWANRequest_DeviceLoRaWANType(::google::protobuf::internal::ConstantInitialized);

  CreateDeviceLoRaWANRequest_DeviceLoRaWANType(const CreateDeviceLoRaWANRequest_DeviceLoRaWANType& from);
  CreateDeviceLoRaWANRequest_DeviceLoRaWANType(CreateDeviceLoRaWANRequest_DeviceLoRaWANType&& from) noexcept
    : CreateDeviceLoRaWANRequest_DeviceLoRaWANType() {
    *this = ::std::move(from);
  }

  inline CreateDeviceLoRaWANRequest_DeviceLoRaWANType& operator=(const CreateDeviceLoRaWANRequest_DeviceLoRaWANType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceLoRaWANRequest_DeviceLoRaWANType& operator=(CreateDeviceLoRaWANRequest_DeviceLoRaWANType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceLoRaWANRequest_DeviceLoRaWANType& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDeviceLoRaWANRequest_DeviceLoRaWANType* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceLoRaWANRequest_DeviceLoRaWANType*>(
               &_CreateDeviceLoRaWANRequest_DeviceLoRaWANType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CreateDeviceLoRaWANRequest_DeviceLoRaWANType& a, CreateDeviceLoRaWANRequest_DeviceLoRaWANType& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDeviceLoRaWANRequest_DeviceLoRaWANType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceLoRaWANRequest_DeviceLoRaWANType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceLoRaWANRequest_DeviceLoRaWANType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateDeviceLoRaWANRequest_DeviceLoRaWANType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDeviceLoRaWANRequest_DeviceLoRaWANType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateDeviceLoRaWANRequest_DeviceLoRaWANType& from) {
    CreateDeviceLoRaWANRequest_DeviceLoRaWANType::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceLoRaWANRequest_DeviceLoRaWANType* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType";
  }
  protected:
  explicit CreateDeviceLoRaWANRequest_DeviceLoRaWANType(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppKeyFieldNumber = 1,
  };
  // string app_key = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_app_key() ;
  const std::string& app_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_key(Arg_&& arg, Args_... args);
  std::string* mutable_app_key();
  PROTOBUF_NODISCARD std::string* release_app_key();
  void set_allocated_app_key(std::string* ptr);

  private:
  const std::string& _internal_app_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_key(
      const std::string& value);
  std::string* _internal_mutable_app_key();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 75, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr app_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class CreateDeviceLoRaWANRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.CreateDeviceLoRaWANRequest) */ {
 public:
  inline CreateDeviceLoRaWANRequest() : CreateDeviceLoRaWANRequest(nullptr) {}
  ~CreateDeviceLoRaWANRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDeviceLoRaWANRequest(::google::protobuf::internal::ConstantInitialized);

  CreateDeviceLoRaWANRequest(const CreateDeviceLoRaWANRequest& from);
  CreateDeviceLoRaWANRequest(CreateDeviceLoRaWANRequest&& from) noexcept
    : CreateDeviceLoRaWANRequest() {
    *this = ::std::move(from);
  }

  inline CreateDeviceLoRaWANRequest& operator=(const CreateDeviceLoRaWANRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDeviceLoRaWANRequest& operator=(CreateDeviceLoRaWANRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDeviceLoRaWANRequest& default_instance() {
    return *internal_default_instance();
  }
  enum TypeOneofCase {
    kGatewayLorawanType = 2,
    kDeviceLorawanType = 3,
    TYPE_ONEOF_NOT_SET = 0,
  };

  static inline const CreateDeviceLoRaWANRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceLoRaWANRequest*>(
               &_CreateDeviceLoRaWANRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CreateDeviceLoRaWANRequest& a, CreateDeviceLoRaWANRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDeviceLoRaWANRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDeviceLoRaWANRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDeviceLoRaWANRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateDeviceLoRaWANRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDeviceLoRaWANRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateDeviceLoRaWANRequest& from) {
    CreateDeviceLoRaWANRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceLoRaWANRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.CreateDeviceLoRaWANRequest";
  }
  protected:
  explicit CreateDeviceLoRaWANRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CreateDeviceLoRaWANRequest_GatewayLoRaWANType GatewayLoRaWANType;
  typedef CreateDeviceLoRaWANRequest_DeviceLoRaWANType DeviceLoRaWANType;

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kGatewayLorawanTypeFieldNumber = 2,
    kDeviceLorawanTypeFieldNumber = 3,
  };
  // string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .thingspect.api.CreateDeviceLoRaWANRequest.GatewayLoRaWANType gateway_lorawan_type = 2 [json_name = "gatewayLoRaWANType"];
  bool has_gateway_lorawan_type() const;
  private:
  bool _internal_has_gateway_lorawan_type() const;

  public:
  void clear_gateway_lorawan_type() ;
  const ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType& gateway_lorawan_type() const;
  PROTOBUF_NODISCARD ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* release_gateway_lorawan_type();
  ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* mutable_gateway_lorawan_type();
  void set_allocated_gateway_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* value);
  void unsafe_arena_set_allocated_gateway_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* value);
  ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* unsafe_arena_release_gateway_lorawan_type();

  private:
  const ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType& _internal_gateway_lorawan_type() const;
  ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* _internal_mutable_gateway_lorawan_type();

  public:
  // .thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType device_lorawan_type = 3 [json_name = "deviceLoRaWANType"];
  bool has_device_lorawan_type() const;
  private:
  bool _internal_has_device_lorawan_type() const;

  public:
  void clear_device_lorawan_type() ;
  const ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType& device_lorawan_type() const;
  PROTOBUF_NODISCARD ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* release_device_lorawan_type();
  ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* mutable_device_lorawan_type();
  void set_allocated_device_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* value);
  void unsafe_arena_set_allocated_device_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* value);
  ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* unsafe_arena_release_device_lorawan_type();

  private:
  const ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType& _internal_device_lorawan_type() const;
  ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* _internal_mutable_device_lorawan_type();

  public:
  void clear_type_oneof();
  TypeOneofCase type_oneof_case() const;
  // @@protoc_insertion_point(class_scope:thingspect.api.CreateDeviceLoRaWANRequest)
 private:
  class _Internal;
  void set_has_gateway_lorawan_type();
  void set_has_device_lorawan_type();

  inline bool has_type_oneof() const;
  inline void clear_has_type_oneof();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3, 2, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    union TypeOneofUnion {
      constexpr TypeOneofUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* gateway_lorawan_type_;
      ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* device_lorawan_type_;
    } type_oneof_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class GetDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.GetDeviceRequest) */ {
 public:
  inline GetDeviceRequest() : GetDeviceRequest(nullptr) {}
  ~GetDeviceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDeviceRequest(::google::protobuf::internal::ConstantInitialized);

  GetDeviceRequest(const GetDeviceRequest& from);
  GetDeviceRequest(GetDeviceRequest&& from) noexcept
    : GetDeviceRequest() {
    *this = ::std::move(from);
  }

  inline GetDeviceRequest& operator=(const GetDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDeviceRequest& operator=(GetDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceRequest*>(
               &_GetDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetDeviceRequest& a, GetDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDeviceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDeviceRequest& from) {
    GetDeviceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDeviceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.GetDeviceRequest";
  }
  protected:
  explicit GetDeviceRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.GetDeviceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 42, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class UpdateDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.UpdateDeviceRequest) */ {
 public:
  inline UpdateDeviceRequest() : UpdateDeviceRequest(nullptr) {}
  ~UpdateDeviceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDeviceRequest(::google::protobuf::internal::ConstantInitialized);

  UpdateDeviceRequest(const UpdateDeviceRequest& from);
  UpdateDeviceRequest(UpdateDeviceRequest&& from) noexcept
    : UpdateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline UpdateDeviceRequest& operator=(const UpdateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDeviceRequest& operator=(UpdateDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceRequest*>(
               &_UpdateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(UpdateDeviceRequest& a, UpdateDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateDeviceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateDeviceRequest& from) {
    UpdateDeviceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDeviceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.UpdateDeviceRequest";
  }
  protected:
  explicit UpdateDeviceRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .thingspect.api.Device device = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  bool has_device() const;
  void clear_device() ;
  const ::thingspect::api::Device& device() const;
  PROTOBUF_NODISCARD ::thingspect::api::Device* release_device();
  ::thingspect::api::Device* mutable_device();
  void set_allocated_device(::thingspect::api::Device* value);
  void unsafe_arena_set_allocated_device(::thingspect::api::Device* value);
  ::thingspect::api::Device* unsafe_arena_release_device();

  private:
  const ::thingspect::api::Device& _internal_device() const;
  ::thingspect::api::Device* _internal_mutable_device();

  public:
  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask() ;
  const ::google::protobuf::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* value);
  void unsafe_arena_set_allocated_update_mask(::google::protobuf::FieldMask* value);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  ::google::protobuf::FieldMask* _internal_mutable_update_mask();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.UpdateDeviceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::thingspect::api::Device* device_;
    ::google::protobuf::FieldMask* update_mask_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class DeleteDeviceLoRaWANRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.DeleteDeviceLoRaWANRequest) */ {
 public:
  inline DeleteDeviceLoRaWANRequest() : DeleteDeviceLoRaWANRequest(nullptr) {}
  ~DeleteDeviceLoRaWANRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDeviceLoRaWANRequest(::google::protobuf::internal::ConstantInitialized);

  DeleteDeviceLoRaWANRequest(const DeleteDeviceLoRaWANRequest& from);
  DeleteDeviceLoRaWANRequest(DeleteDeviceLoRaWANRequest&& from) noexcept
    : DeleteDeviceLoRaWANRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceLoRaWANRequest& operator=(const DeleteDeviceLoRaWANRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDeviceLoRaWANRequest& operator=(DeleteDeviceLoRaWANRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDeviceLoRaWANRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDeviceLoRaWANRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceLoRaWANRequest*>(
               &_DeleteDeviceLoRaWANRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteDeviceLoRaWANRequest& a, DeleteDeviceLoRaWANRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteDeviceLoRaWANRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDeviceLoRaWANRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDeviceLoRaWANRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteDeviceLoRaWANRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteDeviceLoRaWANRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteDeviceLoRaWANRequest& from) {
    DeleteDeviceLoRaWANRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceLoRaWANRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.DeleteDeviceLoRaWANRequest";
  }
  protected:
  explicit DeleteDeviceLoRaWANRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.DeleteDeviceLoRaWANRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class DeleteDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.DeleteDeviceRequest) */ {
 public:
  inline DeleteDeviceRequest() : DeleteDeviceRequest(nullptr) {}
  ~DeleteDeviceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteDeviceRequest(::google::protobuf::internal::ConstantInitialized);

  DeleteDeviceRequest(const DeleteDeviceRequest& from);
  DeleteDeviceRequest(DeleteDeviceRequest&& from) noexcept
    : DeleteDeviceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceRequest& operator=(const DeleteDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDeviceRequest& operator=(DeleteDeviceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceRequest*>(
               &_DeleteDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DeleteDeviceRequest& a, DeleteDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteDeviceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDeviceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteDeviceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteDeviceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteDeviceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteDeviceRequest& from) {
    DeleteDeviceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.DeleteDeviceRequest";
  }
  protected:
  explicit DeleteDeviceRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.DeleteDeviceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 45, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class ListDevicesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.ListDevicesRequest) */ {
 public:
  inline ListDevicesRequest() : ListDevicesRequest(nullptr) {}
  ~ListDevicesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListDevicesRequest(::google::protobuf::internal::ConstantInitialized);

  ListDevicesRequest(const ListDevicesRequest& from);
  ListDevicesRequest(ListDevicesRequest&& from) noexcept
    : ListDevicesRequest() {
    *this = ::std::move(from);
  }

  inline ListDevicesRequest& operator=(const ListDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevicesRequest& operator=(ListDevicesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDevicesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDevicesRequest*>(
               &_ListDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ListDevicesRequest& a, ListDevicesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDevicesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevicesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDevicesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListDevicesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDevicesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListDevicesRequest& from) {
    ListDevicesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.ListDevicesRequest";
  }
  protected:
  explicit ListDevicesRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageTokenFieldNumber = 2,
    kTagFieldNumber = 3,
    kPageSizeFieldNumber = 1,
  };
  // string page_token = 2;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* ptr);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // string tag = 3 [(.validate.rules) = {
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* ptr);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // int32 page_size = 1 [(.validate.rules) = {
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.ListDevicesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::int32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};// -------------------------------------------------------------------

class ListDevicesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:thingspect.api.ListDevicesResponse) */ {
 public:
  inline ListDevicesResponse() : ListDevicesResponse(nullptr) {}
  ~ListDevicesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListDevicesResponse(::google::protobuf::internal::ConstantInitialized);

  ListDevicesResponse(const ListDevicesResponse& from);
  ListDevicesResponse(ListDevicesResponse&& from) noexcept
    : ListDevicesResponse() {
    *this = ::std::move(from);
  }

  inline ListDevicesResponse& operator=(const ListDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevicesResponse& operator=(ListDevicesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDevicesResponse*>(
               &_ListDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ListDevicesResponse& a, ListDevicesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDevicesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevicesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDevicesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListDevicesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDevicesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListDevicesResponse& from) {
    ListDevicesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "thingspect.api.ListDevicesResponse";
  }
  protected:
  explicit ListDevicesResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevicesFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
    kTotalSizeFieldNumber = 3,
  };
  // repeated .thingspect.api.Device devices = 1;
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::thingspect::api::Device* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::thingspect::api::Device >*
      mutable_devices();
  private:
  const ::google::protobuf::RepeatedPtrField<::thingspect::api::Device>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::thingspect::api::Device>* _internal_mutable_devices();
  public:
  const ::thingspect::api::Device& devices(int index) const;
  ::thingspect::api::Device* add_devices();
  const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Device >&
      devices() const;
  // string next_page_token = 2;
  void clear_next_page_token() ;
  const std::string& next_page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* ptr);

  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(
      const std::string& value);
  std::string* _internal_mutable_next_page_token();

  public:
  // int32 total_size = 3;
  void clear_total_size() ;
  ::int32_t total_size() const;
  void set_total_size(::int32_t value);

  private:
  ::int32_t _internal_total_size() const;
  void _internal_set_total_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:thingspect.api.ListDevicesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 58, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::thingspect::api::Device > devices_;
    ::google::protobuf::internal::ArenaStringPtr next_page_token_;
    ::int32_t total_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fthingspect_5fdevice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Device

// string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Device::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Device::id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Device::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Device.id)
}
inline std::string* Device::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.id)
  return _s;
}
inline const std::string& Device::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Device::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* Device::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* Device::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.id)
  return _impl_.id_.Release();
}
inline void Device::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.id)
}

// string org_id = 2 [json_name = "orgID", (.google.api.field_behavior) = OUTPUT_ONLY];
inline void Device::clear_org_id() {
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& Device::org_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Device::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Device.org_id)
}
inline std::string* Device::mutable_org_id() {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.org_id)
  return _s;
}
inline const std::string& Device::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void Device::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Device::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Device::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.org_id)
  return _impl_.org_id_.Release();
}
inline void Device::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.org_id)
}

// string uniq_id = 3 [json_name = "uniqID", (.validate.rules) = {
inline void Device::clear_uniq_id() {
  _impl_.uniq_id_.ClearToEmpty();
}
inline const std::string& Device::uniq_id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.uniq_id)
  return _internal_uniq_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Device::set_uniq_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uniq_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Device.uniq_id)
}
inline std::string* Device::mutable_uniq_id() {
  std::string* _s = _internal_mutable_uniq_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.uniq_id)
  return _s;
}
inline const std::string& Device::_internal_uniq_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uniq_id_.Get();
}
inline void Device::_internal_set_uniq_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uniq_id_.Set(value, GetArenaForAllocation());
}
inline std::string* Device::_internal_mutable_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uniq_id_.Mutable( GetArenaForAllocation());
}
inline std::string* Device::release_uniq_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.uniq_id)
  return _impl_.uniq_id_.Release();
}
inline void Device::set_allocated_uniq_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uniq_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uniq_id_.IsDefault()) {
          _impl_.uniq_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.uniq_id)
}

// string name = 4 [(.validate.rules) = {
inline void Device::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Device::name() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Device::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Device.name)
}
inline std::string* Device::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.name)
  return _s;
}
inline const std::string& Device::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Device::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Device::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Device::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.name)
  return _impl_.name_.Release();
}
inline void Device::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.name)
}

// .thingspect.api.Status status = 5 [(.validate.rules) = {
inline void Device::clear_status() {
  _impl_.status_ = 0;
}
inline ::thingspect::api::Status Device::status() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.status)
  return _internal_status();
}
inline void Device::set_status(::thingspect::api::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:thingspect.api.Device.status)
}
inline ::thingspect::api::Status Device::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::thingspect::api::Status>(_impl_.status_);
}
inline void Device::_internal_set_status(::thingspect::api::Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// string token = 6 [(.validate.rules) = {
inline void Device::clear_token() {
  _impl_.token_.ClearToEmpty();
}
inline const std::string& Device::token() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Device::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.Device.token)
}
inline std::string* Device::mutable_token() {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.token)
  return _s;
}
inline const std::string& Device::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void Device::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArenaForAllocation());
}
inline std::string* Device::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArenaForAllocation());
}
inline std::string* Device::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.token)
  return _impl_.token_.Release();
}
inline void Device::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.token)
}

// .thingspect.api.Decoder decoder = 7;
inline void Device::clear_decoder() {
  _impl_.decoder_ = 0;
}
inline ::thingspect::api::Decoder Device::decoder() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.decoder)
  return _internal_decoder();
}
inline void Device::set_decoder(::thingspect::api::Decoder value) {
  _internal_set_decoder(value);
  // @@protoc_insertion_point(field_set:thingspect.api.Device.decoder)
}
inline ::thingspect::api::Decoder Device::_internal_decoder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::thingspect::api::Decoder>(_impl_.decoder_);
}
inline void Device::_internal_set_decoder(::thingspect::api::Decoder value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.decoder_ = value;
}

// repeated string tags = 8 [(.validate.rules) = {
inline int Device::_internal_tags_size() const {
  return _internal_tags().size();
}
inline int Device::tags_size() const {
  return _internal_tags_size();
}
inline void Device::clear_tags() {
  _internal_mutable_tags()->Clear();
}
inline std::string* Device::add_tags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_tags()->Add();
  // @@protoc_insertion_point(field_add_mutable:thingspect.api.Device.tags)
  return _s;
}
inline const std::string& Device::tags(int index) const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.tags)
  return _internal_tags().Get(index);
}
inline std::string* Device::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.tags)
  return _internal_mutable_tags()->Mutable(index);
}
inline void Device::set_tags(int index, const std::string& value) {
  _internal_mutable_tags()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:thingspect.api.Device.tags)
}
inline void Device::set_tags(int index, std::string&& value) {
  _internal_mutable_tags()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:thingspect.api.Device.tags)
}
inline void Device::set_tags(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_tags()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:thingspect.api.Device.tags)
}
inline void Device::set_tags(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_tags()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:thingspect.api.Device.tags)
}
inline void Device::set_tags(int index, absl::string_view value) {
  _internal_mutable_tags()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:thingspect.api.Device.tags)
}
inline void Device::add_tags(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:thingspect.api.Device.tags)
}
inline void Device::add_tags(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:thingspect.api.Device.tags)
}
inline void Device::add_tags(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:thingspect.api.Device.tags)
}
inline void Device::add_tags(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:thingspect.api.Device.tags)
}
inline void Device::add_tags(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_tags()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:thingspect.api.Device.tags)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Device::tags() const {
  // @@protoc_insertion_point(field_list:thingspect.api.Device.tags)
  return _internal_tags();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* Device::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:thingspect.api.Device.tags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tags();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Device::_internal_tags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tags_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Device::_internal_mutable_tags() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tags_;
}

// .google.protobuf.Timestamp created_at = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool Device::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Device::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Device::created_at() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.created_at)
  return _internal_created_at();
}
inline void Device::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.Device.created_at)
}
inline ::google::protobuf::Timestamp* Device::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Device::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Device::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* Device::mutable_created_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.created_at)
  return _msg;
}
inline void Device::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.created_at)
}

// .google.protobuf.Timestamp updated_at = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool Device::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Device::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Device::updated_at() const {
  // @@protoc_insertion_point(field_get:thingspect.api.Device.updated_at)
  return _internal_updated_at();
}
inline void Device::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.Device.updated_at)
}
inline ::google::protobuf::Timestamp* Device::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Device::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.Device.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Device::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* Device::mutable_updated_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:thingspect.api.Device.updated_at)
  return _msg;
}
inline void Device::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.Device.updated_at)
}

// -------------------------------------------------------------------

// CreateDeviceRequest

// .thingspect.api.Device device = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline bool CreateDeviceRequest::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void CreateDeviceRequest::clear_device() {
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::thingspect::api::Device& CreateDeviceRequest::_internal_device() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::thingspect::api::Device* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::thingspect::api::Device&>(::thingspect::api::_Device_default_instance_);
}
inline const ::thingspect::api::Device& CreateDeviceRequest::device() const {
  // @@protoc_insertion_point(field_get:thingspect.api.CreateDeviceRequest.device)
  return _internal_device();
}
inline void CreateDeviceRequest::unsafe_arena_set_allocated_device(::thingspect::api::Device* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.CreateDeviceRequest.device)
}
inline ::thingspect::api::Device* CreateDeviceRequest::release_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::thingspect::api::Device* released = _impl_.device_;
  _impl_.device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::thingspect::api::Device* CreateDeviceRequest::unsafe_arena_release_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.CreateDeviceRequest.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::thingspect::api::Device* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::thingspect::api::Device* CreateDeviceRequest::_internal_mutable_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.device_ == nullptr) {
    auto* p = CreateMaybeMessage<::thingspect::api::Device>(GetArenaForAllocation());
    _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(p);
  }
  return _impl_.device_;
}
inline ::thingspect::api::Device* CreateDeviceRequest::mutable_device() {
  ::thingspect::api::Device* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:thingspect.api.CreateDeviceRequest.device)
  return _msg;
}
inline void CreateDeviceRequest::set_allocated_device(::thingspect::api::Device* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::thingspect::api::Device*>(_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::thingspect::api::Device*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.CreateDeviceRequest.device)
}

// -------------------------------------------------------------------

// CreateDeviceLoRaWANRequest_GatewayLoRaWANType

// -------------------------------------------------------------------

// CreateDeviceLoRaWANRequest_DeviceLoRaWANType

// string app_key = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void CreateDeviceLoRaWANRequest_DeviceLoRaWANType::clear_app_key() {
  _impl_.app_key_.ClearToEmpty();
}
inline const std::string& CreateDeviceLoRaWANRequest_DeviceLoRaWANType::app_key() const {
  // @@protoc_insertion_point(field_get:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType.app_key)
  return _internal_app_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateDeviceLoRaWANRequest_DeviceLoRaWANType::set_app_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType.app_key)
}
inline std::string* CreateDeviceLoRaWANRequest_DeviceLoRaWANType::mutable_app_key() {
  std::string* _s = _internal_mutable_app_key();
  // @@protoc_insertion_point(field_mutable:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType.app_key)
  return _s;
}
inline const std::string& CreateDeviceLoRaWANRequest_DeviceLoRaWANType::_internal_app_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_key_.Get();
}
inline void CreateDeviceLoRaWANRequest_DeviceLoRaWANType::_internal_set_app_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateDeviceLoRaWANRequest_DeviceLoRaWANType::_internal_mutable_app_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_key_.Mutable( GetArenaForAllocation());
}
inline std::string* CreateDeviceLoRaWANRequest_DeviceLoRaWANType::release_app_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType.app_key)
  return _impl_.app_key_.Release();
}
inline void CreateDeviceLoRaWANRequest_DeviceLoRaWANType::set_allocated_app_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_key_.IsDefault()) {
          _impl_.app_key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType.app_key)
}

// -------------------------------------------------------------------

// CreateDeviceLoRaWANRequest

// string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.validate.rules) = {
inline void CreateDeviceLoRaWANRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CreateDeviceLoRaWANRequest::id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.CreateDeviceLoRaWANRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateDeviceLoRaWANRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.CreateDeviceLoRaWANRequest.id)
}
inline std::string* CreateDeviceLoRaWANRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.CreateDeviceLoRaWANRequest.id)
  return _s;
}
inline const std::string& CreateDeviceLoRaWANRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void CreateDeviceLoRaWANRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* CreateDeviceLoRaWANRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* CreateDeviceLoRaWANRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.CreateDeviceLoRaWANRequest.id)
  return _impl_.id_.Release();
}
inline void CreateDeviceLoRaWANRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.CreateDeviceLoRaWANRequest.id)
}

// .thingspect.api.CreateDeviceLoRaWANRequest.GatewayLoRaWANType gateway_lorawan_type = 2 [json_name = "gatewayLoRaWANType"];
inline bool CreateDeviceLoRaWANRequest::has_gateway_lorawan_type() const {
  return type_oneof_case() == kGatewayLorawanType;
}
inline bool CreateDeviceLoRaWANRequest::_internal_has_gateway_lorawan_type() const {
  return type_oneof_case() == kGatewayLorawanType;
}
inline void CreateDeviceLoRaWANRequest::set_has_gateway_lorawan_type() {
  _impl_._oneof_case_[0] = kGatewayLorawanType;
}
inline void CreateDeviceLoRaWANRequest::clear_gateway_lorawan_type() {
  if (type_oneof_case() == kGatewayLorawanType) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.type_oneof_.gateway_lorawan_type_;
    }
    clear_has_type_oneof();
  }
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* CreateDeviceLoRaWANRequest::release_gateway_lorawan_type() {
  // @@protoc_insertion_point(field_release:thingspect.api.CreateDeviceLoRaWANRequest.gateway_lorawan_type)
  if (type_oneof_case() == kGatewayLorawanType) {
    clear_has_type_oneof();
    ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* temp = _impl_.type_oneof_.gateway_lorawan_type_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_oneof_.gateway_lorawan_type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType& CreateDeviceLoRaWANRequest::_internal_gateway_lorawan_type() const {
  return type_oneof_case() == kGatewayLorawanType
      ? *_impl_.type_oneof_.gateway_lorawan_type_
      : reinterpret_cast<::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType&>(::thingspect::api::_CreateDeviceLoRaWANRequest_GatewayLoRaWANType_default_instance_);
}
inline const ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType& CreateDeviceLoRaWANRequest::gateway_lorawan_type() const {
  // @@protoc_insertion_point(field_get:thingspect.api.CreateDeviceLoRaWANRequest.gateway_lorawan_type)
  return _internal_gateway_lorawan_type();
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* CreateDeviceLoRaWANRequest::unsafe_arena_release_gateway_lorawan_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:thingspect.api.CreateDeviceLoRaWANRequest.gateway_lorawan_type)
  if (type_oneof_case() == kGatewayLorawanType) {
    clear_has_type_oneof();
    ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* temp = _impl_.type_oneof_.gateway_lorawan_type_;
    _impl_.type_oneof_.gateway_lorawan_type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateDeviceLoRaWANRequest::unsafe_arena_set_allocated_gateway_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* gateway_lorawan_type) {
  clear_type_oneof();
  if (gateway_lorawan_type) {
    set_has_gateway_lorawan_type();
    _impl_.type_oneof_.gateway_lorawan_type_ = gateway_lorawan_type;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.CreateDeviceLoRaWANRequest.gateway_lorawan_type)
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* CreateDeviceLoRaWANRequest::_internal_mutable_gateway_lorawan_type() {
  if (type_oneof_case() != kGatewayLorawanType) {
    clear_type_oneof();
    set_has_gateway_lorawan_type();
    _impl_.type_oneof_.gateway_lorawan_type_ = CreateMaybeMessage< ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType >(GetArenaForAllocation());
  }
  return _impl_.type_oneof_.gateway_lorawan_type_;
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* CreateDeviceLoRaWANRequest::mutable_gateway_lorawan_type() {
  ::thingspect::api::CreateDeviceLoRaWANRequest_GatewayLoRaWANType* _msg = _internal_mutable_gateway_lorawan_type();
  // @@protoc_insertion_point(field_mutable:thingspect.api.CreateDeviceLoRaWANRequest.gateway_lorawan_type)
  return _msg;
}

// .thingspect.api.CreateDeviceLoRaWANRequest.DeviceLoRaWANType device_lorawan_type = 3 [json_name = "deviceLoRaWANType"];
inline bool CreateDeviceLoRaWANRequest::has_device_lorawan_type() const {
  return type_oneof_case() == kDeviceLorawanType;
}
inline bool CreateDeviceLoRaWANRequest::_internal_has_device_lorawan_type() const {
  return type_oneof_case() == kDeviceLorawanType;
}
inline void CreateDeviceLoRaWANRequest::set_has_device_lorawan_type() {
  _impl_._oneof_case_[0] = kDeviceLorawanType;
}
inline void CreateDeviceLoRaWANRequest::clear_device_lorawan_type() {
  if (type_oneof_case() == kDeviceLorawanType) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.type_oneof_.device_lorawan_type_;
    }
    clear_has_type_oneof();
  }
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* CreateDeviceLoRaWANRequest::release_device_lorawan_type() {
  // @@protoc_insertion_point(field_release:thingspect.api.CreateDeviceLoRaWANRequest.device_lorawan_type)
  if (type_oneof_case() == kDeviceLorawanType) {
    clear_has_type_oneof();
    ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* temp = _impl_.type_oneof_.device_lorawan_type_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_oneof_.device_lorawan_type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType& CreateDeviceLoRaWANRequest::_internal_device_lorawan_type() const {
  return type_oneof_case() == kDeviceLorawanType
      ? *_impl_.type_oneof_.device_lorawan_type_
      : reinterpret_cast<::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType&>(::thingspect::api::_CreateDeviceLoRaWANRequest_DeviceLoRaWANType_default_instance_);
}
inline const ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType& CreateDeviceLoRaWANRequest::device_lorawan_type() const {
  // @@protoc_insertion_point(field_get:thingspect.api.CreateDeviceLoRaWANRequest.device_lorawan_type)
  return _internal_device_lorawan_type();
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* CreateDeviceLoRaWANRequest::unsafe_arena_release_device_lorawan_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:thingspect.api.CreateDeviceLoRaWANRequest.device_lorawan_type)
  if (type_oneof_case() == kDeviceLorawanType) {
    clear_has_type_oneof();
    ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* temp = _impl_.type_oneof_.device_lorawan_type_;
    _impl_.type_oneof_.device_lorawan_type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateDeviceLoRaWANRequest::unsafe_arena_set_allocated_device_lorawan_type(::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* device_lorawan_type) {
  clear_type_oneof();
  if (device_lorawan_type) {
    set_has_device_lorawan_type();
    _impl_.type_oneof_.device_lorawan_type_ = device_lorawan_type;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.CreateDeviceLoRaWANRequest.device_lorawan_type)
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* CreateDeviceLoRaWANRequest::_internal_mutable_device_lorawan_type() {
  if (type_oneof_case() != kDeviceLorawanType) {
    clear_type_oneof();
    set_has_device_lorawan_type();
    _impl_.type_oneof_.device_lorawan_type_ = CreateMaybeMessage< ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType >(GetArenaForAllocation());
  }
  return _impl_.type_oneof_.device_lorawan_type_;
}
inline ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* CreateDeviceLoRaWANRequest::mutable_device_lorawan_type() {
  ::thingspect::api::CreateDeviceLoRaWANRequest_DeviceLoRaWANType* _msg = _internal_mutable_device_lorawan_type();
  // @@protoc_insertion_point(field_mutable:thingspect.api.CreateDeviceLoRaWANRequest.device_lorawan_type)
  return _msg;
}

inline bool CreateDeviceLoRaWANRequest::has_type_oneof() const {
  return type_oneof_case() != TYPE_ONEOF_NOT_SET;
}
inline void CreateDeviceLoRaWANRequest::clear_has_type_oneof() {
  _impl_._oneof_case_[0] = TYPE_ONEOF_NOT_SET;
}
inline CreateDeviceLoRaWANRequest::TypeOneofCase CreateDeviceLoRaWANRequest::type_oneof_case() const {
  return CreateDeviceLoRaWANRequest::TypeOneofCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetDeviceRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void GetDeviceRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetDeviceRequest::id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.GetDeviceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDeviceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.GetDeviceRequest.id)
}
inline std::string* GetDeviceRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.GetDeviceRequest.id)
  return _s;
}
inline const std::string& GetDeviceRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void GetDeviceRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetDeviceRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetDeviceRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.GetDeviceRequest.id)
  return _impl_.id_.Release();
}
inline void GetDeviceRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.GetDeviceRequest.id)
}

// -------------------------------------------------------------------

// UpdateDeviceRequest

// .thingspect.api.Device device = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline bool UpdateDeviceRequest::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void UpdateDeviceRequest::clear_device() {
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::thingspect::api::Device& UpdateDeviceRequest::_internal_device() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::thingspect::api::Device* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::thingspect::api::Device&>(::thingspect::api::_Device_default_instance_);
}
inline const ::thingspect::api::Device& UpdateDeviceRequest::device() const {
  // @@protoc_insertion_point(field_get:thingspect.api.UpdateDeviceRequest.device)
  return _internal_device();
}
inline void UpdateDeviceRequest::unsafe_arena_set_allocated_device(::thingspect::api::Device* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.UpdateDeviceRequest.device)
}
inline ::thingspect::api::Device* UpdateDeviceRequest::release_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::thingspect::api::Device* released = _impl_.device_;
  _impl_.device_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::thingspect::api::Device* UpdateDeviceRequest::unsafe_arena_release_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.UpdateDeviceRequest.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::thingspect::api::Device* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::thingspect::api::Device* UpdateDeviceRequest::_internal_mutable_device() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.device_ == nullptr) {
    auto* p = CreateMaybeMessage<::thingspect::api::Device>(GetArenaForAllocation());
    _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(p);
  }
  return _impl_.device_;
}
inline ::thingspect::api::Device* UpdateDeviceRequest::mutable_device() {
  ::thingspect::api::Device* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:thingspect.api.UpdateDeviceRequest.device)
  return _msg;
}
inline void UpdateDeviceRequest::set_allocated_device(::thingspect::api::Device* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::thingspect::api::Device*>(_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::thingspect::api::Device*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::thingspect::api::Device*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.UpdateDeviceRequest.device)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateDeviceRequest::has_update_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_mask_ != nullptr);
  return value;
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRequest::_internal_update_mask() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FieldMask&>(::google::protobuf::_FieldMask_default_instance_);
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:thingspect.api.UpdateDeviceRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateDeviceRequest::unsafe_arena_set_allocated_update_mask(::google::protobuf::FieldMask* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:thingspect.api.UpdateDeviceRequest.update_mask)
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::release_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* released = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::unsafe_arena_release_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.UpdateDeviceRequest.update_mask)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::_internal_mutable_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(p);
  }
  return _impl_.update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::mutable_update_mask() {
  ::google::protobuf::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:thingspect.api.UpdateDeviceRequest.update_mask)
  return _msg;
}
inline void UpdateDeviceRequest::set_allocated_update_mask(::google::protobuf::FieldMask* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_mask_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.UpdateDeviceRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteDeviceLoRaWANRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void DeleteDeviceLoRaWANRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteDeviceLoRaWANRequest::id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.DeleteDeviceLoRaWANRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteDeviceLoRaWANRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.DeleteDeviceLoRaWANRequest.id)
}
inline std::string* DeleteDeviceLoRaWANRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.DeleteDeviceLoRaWANRequest.id)
  return _s;
}
inline const std::string& DeleteDeviceLoRaWANRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void DeleteDeviceLoRaWANRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteDeviceLoRaWANRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteDeviceLoRaWANRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.DeleteDeviceLoRaWANRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteDeviceLoRaWANRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.DeleteDeviceLoRaWANRequest.id)
}

// -------------------------------------------------------------------

// DeleteDeviceRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void DeleteDeviceRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteDeviceRequest::id() const {
  // @@protoc_insertion_point(field_get:thingspect.api.DeleteDeviceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteDeviceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.DeleteDeviceRequest.id)
}
inline std::string* DeleteDeviceRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:thingspect.api.DeleteDeviceRequest.id)
  return _s;
}
inline const std::string& DeleteDeviceRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void DeleteDeviceRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteDeviceRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteDeviceRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.DeleteDeviceRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteDeviceRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.DeleteDeviceRequest.id)
}

// -------------------------------------------------------------------

// ListDevicesRequest

// int32 page_size = 1 [(.validate.rules) = {
inline void ListDevicesRequest::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline ::int32_t ListDevicesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesRequest.page_size)
  return _internal_page_size();
}
inline void ListDevicesRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:thingspect.api.ListDevicesRequest.page_size)
}
inline ::int32_t ListDevicesRequest::_internal_page_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_size_;
}
inline void ListDevicesRequest::_internal_set_page_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_size_ = value;
}

// string page_token = 2;
inline void ListDevicesRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListDevicesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesRequest.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDevicesRequest::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListDevicesRequest.page_token)
}
inline std::string* ListDevicesRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListDevicesRequest.page_token)
  return _s;
}
inline const std::string& ListDevicesRequest::_internal_page_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_token_.Get();
}
inline void ListDevicesRequest::_internal_set_page_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListDevicesRequest::_internal_mutable_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.page_token_.Mutable( GetArenaForAllocation());
}
inline std::string* ListDevicesRequest::release_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListDevicesRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListDevicesRequest::set_allocated_page_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListDevicesRequest.page_token)
}

// string tag = 3 [(.validate.rules) = {
inline void ListDevicesRequest::clear_tag() {
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& ListDevicesRequest::tag() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDevicesRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListDevicesRequest.tag)
}
inline std::string* ListDevicesRequest::mutable_tag() {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListDevicesRequest.tag)
  return _s;
}
inline const std::string& ListDevicesRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void ListDevicesRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArenaForAllocation());
}
inline std::string* ListDevicesRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArenaForAllocation());
}
inline std::string* ListDevicesRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListDevicesRequest.tag)
  return _impl_.tag_.Release();
}
inline void ListDevicesRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListDevicesRequest.tag)
}

// -------------------------------------------------------------------

// ListDevicesResponse

// repeated .thingspect.api.Device devices = 1;
inline int ListDevicesResponse::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int ListDevicesResponse::devices_size() const {
  return _internal_devices_size();
}
inline void ListDevicesResponse::clear_devices() {
  _internal_mutable_devices()->Clear();
}
inline ::thingspect::api::Device* ListDevicesResponse::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListDevicesResponse.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::thingspect::api::Device >*
ListDevicesResponse::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:thingspect.api.ListDevicesResponse.devices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_devices();
}
inline const ::thingspect::api::Device& ListDevicesResponse::devices(int index) const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesResponse.devices)
    return _internal_devices().Get(index);
}
inline ::thingspect::api::Device* ListDevicesResponse::add_devices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::thingspect::api::Device* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:thingspect.api.ListDevicesResponse.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::thingspect::api::Device >&
ListDevicesResponse::devices() const {
  // @@protoc_insertion_point(field_list:thingspect.api.ListDevicesResponse.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::thingspect::api::Device>&
ListDevicesResponse::_internal_devices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::thingspect::api::Device>*
ListDevicesResponse::_internal_mutable_devices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.devices_;
}

// string next_page_token = 2;
inline void ListDevicesResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListDevicesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDevicesResponse::set_next_page_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.next_page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:thingspect.api.ListDevicesResponse.next_page_token)
}
inline std::string* ListDevicesResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:thingspect.api.ListDevicesResponse.next_page_token)
  return _s;
}
inline const std::string& ListDevicesResponse::_internal_next_page_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.next_page_token_.Get();
}
inline void ListDevicesResponse::_internal_set_next_page_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListDevicesResponse::_internal_mutable_next_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.next_page_token_.Mutable( GetArenaForAllocation());
}
inline std::string* ListDevicesResponse::release_next_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:thingspect.api.ListDevicesResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListDevicesResponse::set_allocated_next_page_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.next_page_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_page_token_.IsDefault()) {
          _impl_.next_page_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:thingspect.api.ListDevicesResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListDevicesResponse::clear_total_size() {
  _impl_.total_size_ = 0;
}
inline ::int32_t ListDevicesResponse::total_size() const {
  // @@protoc_insertion_point(field_get:thingspect.api.ListDevicesResponse.total_size)
  return _internal_total_size();
}
inline void ListDevicesResponse::set_total_size(::int32_t value) {
  _internal_set_total_size(value);
  // @@protoc_insertion_point(field_set:thingspect.api.ListDevicesResponse.total_size)
}
inline ::int32_t ListDevicesResponse::_internal_total_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_size_;
}
inline void ListDevicesResponse::_internal_set_total_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_size_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace thingspect


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::thingspect::api::Decoder> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::thingspect::api::Decoder>() {
  return ::thingspect::api::Decoder_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fthingspect_5fdevice_2eproto_2epb_2eh
