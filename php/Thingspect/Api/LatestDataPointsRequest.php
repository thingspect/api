<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/thingspect_datapoint.proto

namespace Thingspect\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LatestDataPointsRequest is sent to list latest device data points in a [now, start) time range.
 *
 * Generated from protobuf message <code>thingspect.api.LatestDataPointsRequest</code>
 */
class LatestDataPointsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Data points range start time. Defaults to now - 30 days if not specified. Maximum supported time range is 90 days.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    protected $start_time = null;
    protected $id_oneof;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $uniq_id
     *           Device unique ID. Either unique ID or device ID must be provided.
     *     @type string $device_id
     *           Device ID (UUID). Either unique ID or device ID must be provided.
     *     @type \Google\Protobuf\Timestamp $start_time
     *           Data points range start time. Defaults to now - 30 days if not specified. Maximum supported time range is 90 days.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\ThingspectDatapoint::initOnce();
        parent::__construct($data);
    }

    /**
     * Device unique ID. Either unique ID or device ID must be provided.
     *
     * Generated from protobuf field <code>string uniq_id = 1 [json_name = "uniqID"];</code>
     * @return string
     */
    public function getUniqId()
    {
        return $this->readOneof(1);
    }

    public function hasUniqId()
    {
        return $this->hasOneof(1);
    }

    /**
     * Device unique ID. Either unique ID or device ID must be provided.
     *
     * Generated from protobuf field <code>string uniq_id = 1 [json_name = "uniqID"];</code>
     * @param string $var
     * @return $this
     */
    public function setUniqId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Device ID (UUID). Either unique ID or device ID must be provided.
     *
     * Generated from protobuf field <code>string device_id = 2 [json_name = "deviceID", (.validate.rules) = {</code>
     * @return string
     */
    public function getDeviceId()
    {
        return $this->readOneof(2);
    }

    public function hasDeviceId()
    {
        return $this->hasOneof(2);
    }

    /**
     * Device ID (UUID). Either unique ID or device ID must be provided.
     *
     * Generated from protobuf field <code>string device_id = 2 [json_name = "deviceID", (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Data points range start time. Defaults to now - 30 days if not specified. Maximum supported time range is 90 days.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    public function hasStartTime()
    {
        return isset($this->start_time);
    }

    public function clearStartTime()
    {
        unset($this->start_time);
    }

    /**
     * Data points range start time. Defaults to now - 30 days if not specified. Maximum supported time range is 90 days.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getIdOneof()
    {
        return $this->whichOneof("id_oneof");
    }

}

