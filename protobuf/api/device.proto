syntax = "proto3";
package api;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/thingspect/api/go/api";

// DeviceService contains functions to query and modify devices.
service DeviceService {
  // Create a device.
  rpc Create(CreateDeviceRequest) returns (CreateDeviceResponse) {
    option (google.api.http) = {
      post: "/v1/devices"
      body: "*"
    };
  }

  // Read a device by ID.
  rpc Read(ReadDeviceRequest) returns (ReadDeviceResponse) {
    option (google.api.http) = {
      get: "/v1/devices/{id}"
    };
  }

  // Update a device.
  rpc Update(UpdateDeviceRequest) returns (UpdateDeviceResponse) {
    option (google.api.http) = {
      put: "/v1/devices/{device.id}"
      body: "*"
    };
  }

  // Delete a device by ID.
  rpc Delete(DeleteDeviceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/devices/{id}"
    };
  }

  // List all devices.
  rpc List(ListDeviceRequest) returns (ListDeviceResponse) {
    option (google.api.http) = {
      get: "/v1/devices"
    };
  }
}

// Device represents a device as stored in the database.
message Device {
  // Device ID (UUID).
  string id = 1;

  // Organization ID (UUID).
  string org_id = 2 [json_name = "orgID"];

  // Device unique ID.
  string uniq_id = 3 [json_name = "uniqID"];

  // Set to true to disable the device.
  bool is_disabled = 4;

  // Authentication token (UUID).
  string token = 5;

  // Device creation timestamp.
  google.protobuf.Timestamp created_at = 6;

  // Device modification timestamp.
  google.protobuf.Timestamp updated_at = 7;
}

// CreateDeviceRequest is sent to create a device.
message CreateDeviceRequest {
  // Device message to create.
  Device device = 1;
}

// CreateDeviceResponse is sent in response to a device creation.
message CreateDeviceResponse {
  // Created device message.
  Device device = 1;
}

// ReadDeviceRequest is sent to read a device.
message ReadDeviceRequest {
  // Device ID (UUID) to read.
  string id = 1;

  // Organization ID (UUID). Temporary pending authentication.
  string org_id = 2 [json_name = "orgID"];
}

// ReadDeviceResponse is sent in response to a device read.
message ReadDeviceResponse {
  // Read device message.
  Device device = 1;
}

// UpdateDeviceRequest is sent to update a device.
message UpdateDeviceRequest {
  // Device message to update.
  Device device = 1;
}

// UpdateDeviceResponse is sent in response to a device update.
message UpdateDeviceResponse {
  // Updated device message.
  Device device = 1;
}

// DeleteDeviceRequest is sent to delete a device.
message DeleteDeviceRequest {
  // Device ID (UUID) to delete.
  string id = 1;

  // Organization ID (UUID). Temporary pending authentication.
  string org_id = 2 [json_name = "orgID"];
}

message ListDeviceRequest {
	// Number of devices to return.
	int32 limit = 1;

	// Offset to start the results.
	int32 offset = 2;

  // Organization ID (UUID). Temporary pending authentication.
  string org_id = 3 [json_name = "orgID"];
}

message ListDeviceResponse {
	// Total number of devices.
	int32 total = 1;

	// Device array.
	repeated Device devices = 2;
}
